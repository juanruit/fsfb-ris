BROKER SCHEMA co.com.fsfb.services


DECLARE NAME_SERVICE  CONSTANT	CHARACTER 'RIS.ORMIN';
DECLARE NAME_COMPONENT CONSTANT CHARACTER 'RIS_ORMIN_Adapter';
DECLARE TYPE_LOG_1 CONSTANT 	CHARACTER '1'; 

CREATE COMPUTE MODULE Adapter_REQ_GetData
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- setear set de caracteres
		SET OutputRoot.Properties.CodedCharSetId 	= '819';
		SET OutputRoot.Properties.Encoding 			= '1208';
		
		-- construcción de cabecera MQMD
		CREATE FIELD OutputRoot.MQMD;
		CREATE FIELD OutputRoot.MQRFH2;
		
		DECLARE refMQRFH2 REFERENCE TO OutputRoot.MQRFH2;
		
		-- Genera consulta SQL
		DECLARE sql CHARACTER 'SELECT AGFA_ORM_INBOUND.* 
			FROM admsalud.AGFA_ADT, admsalud.AGFA_ORM_INBOUND   
			WHERE AGFA_ADT.PV1_VISITNR= AGFA_ORM_INBOUND.ORC_04_QP_REQ_IDADT 
			AND AGFA_ADT.EVN_TYPECODE = ? 
			AND AGFA_ADT.MSH_STATUS = ? 
			AND AGFA_ADT.PID_ID2=AGFA_ORM_INBOUND.PID_03_ID2
			AND AGFA_ORM_INBOUND.MSH_STATUS = ?
			AND rownum < ?';
		
		DECLARE data ROW;
		SET data.results = PASSTHRU(sql,'A01','T','N',20);
		
		FOR refData AS data.results[]  DO
			
			-- Crear identidad del servicio en cabecera MQRFH2
			CALL co.com.commons.procedures.createIdentityService(refMQRFH2, NAME_SERVICE, NAME_COMPONENT, TYPE_LOG_1, UUIDASCHAR, 'localhost');
			
			-- Poner identificador de Base de datos
			SET refMQRFH2.usr.service.globalID = CAST(refData.MSH_10_ID AS CHARACTER);
			
			-- construcción del mensaje FSFB
			CREATE FIELD OutputRoot.XMLNSC.FSFB;
			DECLARE refOut REFERENCE TO OutputRoot.XMLNSC.FSFB;
			
			-- copiar mensaje consultado
			SET refOut = refData;
			
			-- propagar mensaje
			PROPAGATE TO TERMINAL 'out' DELETE NONE;	
		END FOR;
		RETURN FALSE;
	END;
END MODULE;